name: CI

on: push

jobs:
  rubocop:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Install dependencies
        run: bundle install
      - name: Run tests
        run: rubocop
  rspec:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Install dependencies
        run: bundle install
      - name: Run tests
        run: rspec spec
  integration-tests:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Build the docker-compose stack
        run: docker-compose up -d
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          INTEGRATION_TEST_GROUP_ID: ${{ secrets.INTEGRATION_TEST_GROUP_ID }}
          INTEGRATION_TEST_SUB_GROUPS: ${{ secrets.INTEGRATION_TEST_SUB_GROUPS }}
      - name: Enable test gems
        run: docker-compose exec -T dev bundle config --delete without
      - name: Install gems
        run: docker-compose exec -T dev bundle install
      - name: Run tests
        run: docker-compose exec -T dev rspec integration-tests
  build-and-push-container:
    runs-on: ubuntu-latest
    needs: [rspec, rubocop, integration-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: thpdev/ggm:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}